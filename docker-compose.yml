services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: coachgpt_db
    environment:
      POSTGRES_DB: coachgpt
      POSTGRES_PASSWORD: password
      PGUSER: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - coachgpt_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: coachgpt_backend
    environment:
      - NODE_ENV=production
      - PORT=5002
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=coachgpt
      - DB_USER=postgres
      - DB_PASSWORD=password
      - JWT_SECRET=coachgpt_secret_4231
    ports:
      - "5002:5002"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - coachgpt_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: coachgpt_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - coachgpt_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  coachgpt_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local