version: '3.8'

services:
  # PostgreSQL Database - For Backend only
  postgres:
    image: postgres:15-alpine
    container_name: coachgpt_db
    env_file:
      - ./backend/.env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./setup_database.sql:/docker-entrypoint-initdb.d/setup_database.sql
    networks:
      - coachgpt_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: coachgpt_backend
    env_file:
      - ./backend/.env
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
    ports:
      - "5002:5002"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - coachgpt_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Ollama LLM Engine
  ollama:
    image: ollama/ollama:latest
    container_name: coachgpt_ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - coachgpt_network
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
      - OLLAMA_ORIGINS=http://localhost:3001
    healthcheck:
      test: ["CMD", "/bin/ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # LLM Microservice
  llm-service:
    build:
      context: ./llm
      dockerfile: Dockerfile
    container_name: coachgpt_llm_service
    env_file:
      - ./llm/.env
    environment:
      - OLLAMA_URL=http://ollama:11434
    ports:
      - "5003:5003"
    depends_on:
      ollama:
        condition: service_healthy
    networks:
      - coachgpt_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 180s
    restart: unless-stopped

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: coachgpt_frontend
    env_file:
      - ./frontend/.env
    ports:
      - "3001:3001"
    depends_on:
      backend:
        condition: service_healthy
      llm-service:
        condition: service_healthy
    networks:
      - coachgpt_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

networks:
  coachgpt_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  ollama_data:
    driver: local