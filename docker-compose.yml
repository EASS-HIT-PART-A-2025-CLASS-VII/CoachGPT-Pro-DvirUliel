services:
  # PostgreSQL Database - Shared infrastructure
  postgres:
    image: postgres:15-alpine
    container_name: coachgpt_db
    environment:
      POSTGRES_DB: coachgpt
      POSTGRES_PASSWORD: password
      PGUSER: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - coachgpt_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache - Shared infrastructure  
  redis:
    image: redis:7-alpine
    container_name: coachgpt_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - coachgpt_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service - INDEPENDENT
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: coachgpt_backend
    environment:
      - NODE_ENV=production
      - PORT=5002
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=coachgpt
      - DB_USER=postgres
      - DB_PASSWORD=password
      - JWT_SECRET=coachgpt_secret_4231
      # Optional: LLM service URL for future integration
      - LLM_SERVICE_URL=http://llm-service:5003
    ports:
      - "5002:5002"
    depends_on:
      # Only depends on shared infrastructure
      postgres:
        condition: service_healthy
      # NO dependency on LLM service!
    networks:
      - coachgpt_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Ollama LLM Engine - INDEPENDENT
  ollama:
    image: ollama/ollama:latest
    container_name: coachgpt_ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - coachgpt_network
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
      - OLLAMA_ORIGINS=["*"]
    healthcheck:
      test: ["CMD", "/bin/ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # LLM Microservice - INDEPENDENT
  llm-service:
    build:
      context: ./LLM
      dockerfile: Dockerfile
    container_name: coachgpt_llm_service
    environment:
      - NODE_ENV=production
      - PORT=5003
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_MODEL=llama3.2:3b
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=coachgpt
      - DB_USER=postgres
      - DB_PASSWORD=password
      - REDIS_URL=redis://redis:6379
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:8080
      - LOG_LEVEL=info
      - RATE_LIMIT_WINDOW_MS=60000
      - RATE_LIMIT_MAX_REQUESTS=20
      - DEFAULT_TEMPERATURE=0.7
      - DEFAULT_TOP_P=0.9
      - DEFAULT_MAX_TOKENS=1000
      - CACHE_TTL=300
      - CACHE_PREFIX=coachgpt_llm
      - SKIP_MODEL_DOWNLOAD=true
    ports:
      - "5003:5003"
    depends_on:
      # Only depends on shared infrastructure + Ollama
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
      redis:
        condition: service_healthy
      # NO dependency on backend!
    networks:
      - coachgpt_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 180s
    restart: unless-stopped

networks:
  coachgpt_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  ollama_data:
    driver: local